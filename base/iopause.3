.\" vim: tw=75
.TH iopause 3
.SH NAME
iopause \- stateful handling of events based on the poll interface or file descriptors

.SH SYNTAX
\fB#include \(dqioause.h\(dq\fR

int \fBiopause\fP(iopause_fd *\fIx\fR, unsigned int \fIlen\fR, struct taia *\fIdeadline\fR, struct taia *\fIstamp\fR);

.SH DESCRIPTION
\fBiopause\fR checks for file descriptor readability or writeability as
specified by \fIx\fR[0].fd, \fIx\fR[0].events, \fIx\fR[1].fd,
\fIx\fR[1].events, ..., \fIx\fR[\fIlen\fR-1].fd,
\fIx\fR[\fIlen\fR-1].events. If \fIx\fR[i].events includes the bit
IOPAUSE_READ, \fBiopause\fR checks for readability of the descriptor
\fIx\fR[i].fd; if \fIx\fR[i].events includes the bit IOPAUSE_WRITE,
\fBiopause\fR checks for writability of the descriptor \fIx\fR[i].fd; other
bits in \fIx\fR[i].events have undefined effects.

\fBiopause\fR sets the IOPAUSE_READ bit in \fIx\fR[i].revents if it finds
that \fIx\fR[i].fd is readabled and it sets the IOPAUSE_WRITE bit in
\fIx\fR[i].revents if it finds that \fIx\fR[i].fd is writable. Beware that
readability and writeability may be destroyed at any moment by other
processes with access to the same file \fIx\fR[i].fd refers to.

If there is no readability or writeability to report, \fBiopause\fR waits
until \fIdeadline\fR for something to happen.  \fBiopause\fR will return
before \fIdeadline\fR if a descriptor becomes readable or writeable, or an
interrupting signal arrives, or some system-defined amount of time passes.
\fBiopause\fR sets \fIrevents\fR in any case.

You must put a current timestamp into \fIstamp\fR before calling
\fBiopause\fR. In case the the current timestamp is older than the previous
one (ie. due to daylight-saving) negative values are omitted.

.SH "IMPLEMENTATION NOTES"
The current implementation of \fBiopause\fR uses the \fBpoll\fR interface
if that is available.  On some systems, \fBpoll\fR needs to dynamically
allocate kernel memory. In case not enough memory is available,
\fBiopause\fR will return immediately and will report (often incorrectly)
that no descriptors are readable or writeable.

If the \fBpoll\fR interface is not available, \fBiopause\fR uses the
\fBselect\fR function. This function cannot see descriptor numbers past a
system-defined limit, typically 256 or 1024; \fBiopause\fR will
artificially pretend that those descriptors are never readable or
writeable.

Future implementations of \fBiopause\fR may work around these problems on
some systems, at the expense of chewing up all available CPU time.

Both \fBpoll\fR and \fBselect\fR use relative timeouts rather than absolute deadlines.
Some kernels round the timeout down to a multiple of 10 milliseconds; this
can burn quite a bit of CPU time as the deadline approaches. \fBiopause\fR
compensates for this by adding 20 milliseconds to the timeout.  In case the
current timestamp is older than the previous one (ie. due to
daylight-saving) the timeout is set to 20 milliseconds.

.SH "RETURN CODES"
\fBiopause\fR reads and deploys the return codes of the \fIpoll\fR and
\fIselect\fR call. Only positive return values shall be considered by the
calling routines for a succcessful invocation.

.SH CREDITS
Parts of the description are taken from the 'libowfat' man page.

.SH "SEE ALSO"
select(2),
poll(3),
taia(3)
