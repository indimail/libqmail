.TH QGETGRENT_R 3 2021-07-05

.SH NAME
qgetgrent_r \- get group file entry reentrantly

.SH SYNOPSIS
.nf
.B #include <qgetpwgr.h>
.PP
.BI "int qgetgrent_r(struct group *" gbuf ", char *" buf ,
.BI "               size_t " buflen ", struct group **" gbufp );
.fi
.PP

.SH DESCRIPTION
The function
.BR qgetgrent_r ()
is the reentrant versions of
.BR qgetgrent (3).
It reads the next group entry from the stream initialized by
.BR qsetgrent (3).
.PP
The \fIgroup\fP structure is defined in
.I <grp.h>
as follows:
.PP
.in +4n
.EX
struct group {
    char   *gr_name;        /* group name */
    char   *gr_passwd;      /* group password */
    gid_t   gr_gid;         /* group ID */
    char  **gr_mem;         /* NULL-terminated array of pointers
                               to names of group members */
};
.EE
.in
.PP
For more information about the fields of this structure, see
.BR group (5).
.PP
The nonreentrant function return a pointer to static storage,
where this static storage contains further pointers to group
name, password and members.
The reentrant function described here return all of that in
caller-provided buffers.
First of all there is the buffer
.I gbuf
that can hold a \fIstruct group\fP.
And next the buffer
.I buf
of size
.I buflen
that can hold additional strings.
The result of these functions, the \fIstruct group\fP read from the stream,
is stored in the provided buffer
.IR *gbuf ,
and a pointer to this \fIstruct group\fP is returned in
.IR *gbufp .

.SH RETURN VALUE
On success, this function return 0 and
.I *gbufp
is a pointer to the \fIstruct group\fP.
On error, these functions return an error value and
.I *gbufp
is NULL.

.SH ERRORS
.TP
.B ENOENT
No more entries.

.TP
.B ERANGE
Insufficient buffer space supplied.
Try again with larger buffer.

.TP
.B ETXTBUSY
Temporary error happened.

.SH NOTES
The function
.BR qgetgrent_r ()
is not really reentrant since it shares the reading position
in the stream with all other threads.

.SH SEE ALSO
.BR qgetgrent (3),
.BR qgetgrgid (3),
.BR qgetgrnam (3),
.BR group (5)
